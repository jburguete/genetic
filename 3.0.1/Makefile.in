.PHONY: clean strip

bin = ./
entity_o = $(bin)entity.o
population_o = $(bin)population.o
reproduction_o = $(bin)reproduction.o
selection_o = $(bin)selection.o
evolution_o = $(bin)evolution.o
genetic_o = $(bin)genetic.o
CC = @CC@ @ARCH@ @LTO@ @STD@ -g
CFLAGS = @MPI@ @CFLAGS@ @GSL_CFLAGS@ @GLIB_CFLAGS@ @GTHREAD_CFLAGS@ -pedantic \
	-Wextra -Wall -O3 -D_FORTIFY_SOURCE=2
LIBS = @LDFLAGS@ @GLIB_LIBS@ @GTHREAD_LIBS@ @GSL_LIBS@ @LIBS@
DEP = Makefile
OBJ = $(entity_o) $(population_o) $(reproduction_o) $(selection_o) \
	$(evolution_o) $(genetic_o)
test_genetic_pgo = $(bin)test_genetic_pgo@EXE@
test_genetic = $(bin)test_genetic@EXE@
ifeq (@PGO@, 1)
	entity_pgo = $(bin)entity.pgo
	population_pgo = $(bin)population.pgo
	reproduction_pgo = $(bin)reproduction.pgo
	selection_pgo = $(bin)selection.pgo
	evolution_pgo = $(bin)evolution.pgo
	genetic_pgo = $(bin)genetic.pgo
	PGOOBJ = $(entity_pgo) $(population_pgo) $(reproduction_pgo) \
		$(selection_pgo) $(evolution_pgo) $(genetic_pgo)
ifeq (@CC@, clang)
	PGOGENERATE = -fprofile-instr-generate
	PGOUSE = -fprofile-use=default.profraw
	ENTITYDEP = $(test_genetic_pgo) $(bin)default.profraw
	POPULATIONDEP = $(test_genetic_pgo) $(bin)default.profraw
	REPRODUCTIONDEP = $(test_genetic_pgo) $(bin)default.profraw
	SELECTIONDEP = $(test_genetic_pgo) $(bin)default.profraw
	EVOLUTIONDEP = $(test_genetic_pgo) $(bin)default.profraw
	GENETICDEP = $(test_genetic_pgo) $(bin)default.profraw
	TESTDEP = $(test_genetic_pgo)
	TESTPREFIX = LLVM_PROFILE_FILE="default.profdata"
	LLVM_PROFDATA = @LLVM_PROFDATA@ merge *.profdata -output default.profraw
else
	PGOGENERATE = -fprofile-generate
	PGOUSE = -fprofile-use -fprofile-correction
	ENTITYDEP = $(test_genetic_pgo) $(bin)entity.gcda
	POPULATIONDEP = $(test_genetic_pgo) $(bin)population.gcda
	REPRODUCTIONDEP = $(test_genetic_pgo) $(bin)reproduction.gcda
	SELECTIONDEP = $(test_genetic_pgo) $(bin)selection.gcda
	EVOLUTIONDEP = $(test_genetic_pgo) $(bin)evolution.gcda
	GENETICDEP = $(test_genetic_pgo) $(bin)genetic.gcda
	TESTDEP = $(test_genetic_pgo)
endif
	libgeneticpgo = $(bin)libgeneticpgo@SO@
else
	ENTITYDEP = entity.c entity.h $(DEP)
	POPULATIONDEP = population.c population.h entity.h bits.h $(DEP)
	REPRODUCTIONDEP = reproduction.c reproduction.h entity.h bits.h $(DEP)
	SELECTIONDEP = selection.c selection.h entity.h bits.h $(DEP)
	EVOLUTIONDEP = evolution.c evolution.h selection.h adaptation.h \
		reproduction.h mutation.h population.h entity.h sort.h bits.h $(DEP)
	GENETICDEP = genetic.c genetic.h evolution.h selection.h reproduction.h \
		population.h entity.h bits.h $(DEP)
 	TESTDEP = test_genetic.c genetic.h evolution.h selection.h population.h \
		entity.h bits.h $(DEP)
endif
CGENERATE = -c -fPIC $(CFLAGS) $(PGOGENERATE)
CUSE = -c -fPIC $(CFLAGS) $(PGOUSE)
libgenetic = $(bin)libgenetic@SO@

all: $(bin) $(test_genetic)

$(bin):
	test -d $(bin) || mkdir -p $(bin)

$(entity_pgo): entity.c entity.h $(DEP)
	$(CC) $(CGENERATE) entity.c -o $(entity_pgo)

$(population_pgo): population.c population.h entity.h bits.h $(DEP)
	$(CC) $(CGENERATE) population.c -o $(population_pgo)

$(reproduction_pgo): reproduction.c reproduction.h entity.h bits.h $(DEP)
	$(CC) $(CGENERATE) reproduction.c -o $(reproduction_pgo)

$(selection_pgo): selection.c selection.h entity.h bits.h $(DEP)
	$(CC) $(CGENERATE) selection.c -o $(selection_pgo)

$(evolution_pgo): evolution.c evolution.h selection.h adaptation.h \
	reproduction.h mutation.h population.h entity.h sort.h bits.h $(DEP)
	$(CC) $(CGENERATE) evolution.c -o $(evolution_pgo)

$(genetic_pgo): genetic.c genetic.h evolution.h selection.h \
	reproduction.h population.h entity.h bits.h $(DEP)
	$(CC) $(CGENERATE) genetic.c -o $(genetic_pgo)

$(libgeneticpgo): $(PGOOBJ)
	$(CC) -shared $(PGOGENERATE) $(PGOOBJ) -o $(libgeneticpgo) $(LIBS)

$(bin)test_genetic.pgo: test_genetic.c genetic.h evolution.h selection.h \
	reproduction.h population.h entity.h bits.h $(DEP)
	$(CC) -c $(CFLAGS) $(PGOGENERATE) test_genetic.c -o $(bin)test_genetic.pgo

$(test_genetic_pgo): $(bin)test_genetic.pgo $(libgeneticpgo)
	$(CC) $(CFLAGS) $(PGOGENERATE) $(bin)test_genetic.pgo \
		-o $(test_genetic_pgo) $(LIBS) -L$(bin) -Wl,-rpath=. -lgeneticpgo
	cd $(bin); $(TESTPREFIX) ./test_genetic_pgo; $(LLVM_PROFDATA)

$(entity_o): $(ENTITYDEP)
	$(CC) $(CUSE) entity.c -o $(entity_o)

$(population_o): $(POPULATIONDEP)
	$(CC) $(CUSE) population.c -o $(population_o)

$(reproduction_o): $(REPRODUCTIONDEP)
	$(CC) $(CUSE) reproduction.c -o $(reproduction_o)

$(selection_o): $(SELECTIONDEP)
	$(CC) $(CUSE) selection.c -o $(selection_o)

$(evolution_o): $(EVOLUTIONDEP)
	$(CC) $(CUSE) evolution.c -o $(evolution_o)

$(genetic_o): $(GENETICDEP)
	$(CC) $(CUSE) genetic.c -o $(genetic_o)

$(libgenetic): $(OBJ) $(libgeneticpgo)
	$(CC) -shared $(PGOUSE) $(OBJ) -o $(libgenetic) $(LIBS)

$(bin)test_genetic.o: $(TESTDEP)
	$(CC) -c $(CFLAGS) $(PGOUSE) test_genetic.c -o $(bin)test_genetic.o

$(test_genetic): $(bin)test_genetic.o $(libgenetic)
	$(CC) $(CFLAGS) $(PGOUSE) $(bin)test_genetic.o -o $(test_genetic) $(LIBS) \
		-L$(bin) -Wl,-rpath=. -lgenetic

clean:
	rm *.o *pgo *.gcda *@SO@ $(test_genetic) $(test_genetic_pgo)

strip:
	@MAKE@
	strip $(test_genetic) $(libgenetic)
